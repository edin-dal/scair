name: Scala CI

# Run on every push to main and every change on pull requests
on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  # Formatting checks
  format:
    name: "Format checks"
    runs-on: ubuntu-latest

    # Checkout the code
    steps:
    - name: Checkout Scair
      uses: actions/checkout@v4
    

    - name: Cache coursier packages
      uses: coursier/cache-action@v6
    - name: Install coursier packages (Scala and SBT)
      uses: coursier/setup-action@v1
      with:
        apps: scala:3.3.1 sbt

    # Run scalafmt, check if the code is formatted as expected
    - name: Run scalafmt
      run: sbt scalafmtCheckAll

  # Unit tests
  unit-tests:
    name: "Unit tests"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Scair
      uses: actions/checkout@v4

    # Restore SBT's incremental build cache
    - name: Restore Incremental Build Cache
      uses: actions/cache@v4
      with:
        # All the target/ subdirectories are cached
        path: "**/target"
        # Caches are immutable; we need to uniquely identify them to always push the recent ones
        # There is an LRU-like policy in place on GitHub's side, capped at 10GB caches per repo
        key: sbt-incremental-tests-${{ github.run_id }}-${{ github.run_attempt }}
        # When restoring, we restore the most recent one pushed by such a job
        # Those are scoped by branch too; e.g., the most recent one from the main branch would
        # be fetched in a fresh PR, then the most recent one from this PR.
        restore-keys: |
          sbt-incremental-tests-

    - name: Cache coursier packages
      uses: coursier/cache-action@v6
    - name: Install coursier packages (Scala and SBT)
      uses: coursier/setup-action@v1
      with:
        apps: scala:3.3.1 sbt

    - name: Compile and run tests
      run: sbt test

  # Filecheck tests
  filechecks:
    name: "Filechecks"

    runs-on: ubuntu-latest

    steps:

    - name: Python Setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install lit and filecheck (python version)
      run: |
        pip install --upgrade pip
        pip install lit filecheck

    
    - name: Checkout Scair
      uses: actions/checkout@v4

    # Restore SBT's incremental build cache
    - name: Cache Incremental Build
      uses: actions/cache@v4
      with:
        # All the target/ subdirectories are cached
        path: "**/target"
        # Caches are immutable; we need to uniquely identify them to always push the recent ones
        # There is an LRU-like policy in place on GitHub's side, capped at 10GB caches per repo
        key: sbt-incremental-stage-${{ github.run_id }}-${{ github.run_attempt }}
        # When restoring, we restore the most recent one pushed by such a job
        # Those are scoped by branch too; e.g., the most recent one from the main branch would
        # be fetched in a fresh PR, then the most recent one from this PR.
        restore-keys: |
          sbt-incremental-stage-

    - name: Cache coursier packages
      uses: coursier/cache-action@v6
    - name: Install coursier packages (Scala and SBT)
      uses: coursier/setup-action@v1
      with:
        apps: scala:3.3.1 sbt
        
    - name: Package scair-opt
      run: sbt stage

    - name: Run filechecks
      run: lit tests/filecheck -v
