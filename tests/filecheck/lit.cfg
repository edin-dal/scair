import lit.formats
import os

config.name = "ScaIR"
config.test_source_root = os.path.dirname(__file__)
config.test_format = lit.formats.ShTest(preamble_commands=[f"cd {config.test_source_root}"])
config.suffixes = ['.mlir', '.scala', '.clair']


scair_opt = os.path.abspath(os.path.join(config.test_source_root, '../../tools/target/universal/stage/bin/scair-opt'))
config.substitutions.append(('scair-opt', f"{scair_opt}"))

clair_run = os.path.abspath(os.path.join(config.test_source_root, '../../tools/target/universal/stage/bin/clair-run'))
config.substitutions.append(('clair-run', f"{clair_run}"))

core_classpath = os.path.abspath(os.path.join(config.test_source_root, '../../core/target/scala-3.3.1/classes'))
clair_classpath = os.path.abspath(os.path.join(config.test_source_root, '../../clair/target/scala-3.3.1/classes'))
dialects_classpath = os.path.abspath(os.path.join(config.test_source_root, '../../dialects/target/scala-3.3.1/classes'))
scairdl_classpath = os.path.abspath(os.path.join(config.test_source_root, '../../scairdl/target/scala-3.3.1/classes'))
transformations_classpath = os.path.abspath(os.path.join(config.test_source_root, '../../transformation/target/scala-3.3.1/classes'))
tools_classpath = os.path.abspath(os.path.join(config.test_source_root, '../../tools/target/scala-3.3.1/classes'))
full_classpath = ':'.join((core_classpath, clair_classpath, dialects_classpath, scairdl_classpath, transformations_classpath, tools_classpath))
config.substitutions.append(('full-classpath', f"-classpath {full_classpath}"))